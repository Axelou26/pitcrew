{% extends 'base.html.twig' %}

{% block title %}Salle d'entretien : {{ interview.title }}{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .visio-redirect-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 80vh;
        padding: 2rem;
        text-align: center;
    }
    
    .visio-card {
        background-color: white;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        padding: 3rem;
        max-width: 600px;
        width: 100%;
    }
    
    .visio-icon {
        font-size: 4rem;
        color: var(--bs-danger);
        margin-bottom: 1.5rem;
    }
    
    .visio-title {
        font-size: 1.8rem;
        margin-bottom: 1rem;
        color: #333;
    }
    
    .visio-text {
        color: #666;
        margin-bottom: 2rem;
        font-size: 1.1rem;
    }
    
    .visio-button {
        padding: 0.8rem 2rem;
        font-size: 1.1rem;
        border-radius: 50px;
        margin: 0.5rem;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
    }
    
    .visio-button:hover {
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }
    
    .visio-button-primary {
        background: linear-gradient(135deg, var(--bs-success) 0%, #28a745 100%);
        border: none;
        color: white;
    }
    
    .visio-button-secondary {
        background: linear-gradient(135deg, var(--bs-secondary) 0%, #6c757d 100%);
        border: none;
        color: white;
    }
    
    .visio-status {
        background-color: #f8f9fa;
        padding: 1rem;
        border-radius: 10px;
        margin-top: 2rem;
    }
    
    .countdown {
        font-size: 1.5rem;
        font-weight: bold;
        color: var(--bs-primary);
    }
    
    .spinner {
        display: inline-block;
        width: 2rem;
        height: 2rem;
        vertical-align: middle;
        border: 0.25rem solid #f8f9fa;
        border-right-color: var(--bs-primary);
        border-radius: 50%;
        animation: spinner-border 0.75s linear infinite;
        margin-right: 0.5rem;
    }
</style>
{% endblock %}

{% block body %}
<div class="visio-redirect-container">
    <div class="visio-card">
        <div class="visio-icon">
            <i class="fas fa-video"></i>
        </div>
        
        <h1 class="visio-title">{{ interview.title }}</h1>
        
        <p class="visio-text">
            Vous êtes sur le point de rejoindre la visioconférence avec 
            <strong>{{ is_granted('ROLE_RECRUTEUR') ? interview.applicant.fullName : interview.recruiter.fullName }}</strong>.
            La visioconférence s'ouvrira dans une nouvelle fenêtre.
        </p>
        
        <div class="visio-status" id="statusMessage">
            <div class="spinner"></div>
            <span>Préparation de la salle de visioconférence...</span>
        </div>
        
        <div class="mt-4">
            <button id="openVisioButton" class="visio-button visio-button-primary">
                <i class="fas fa-video me-2"></i> Ouvrir la visioconférence
            </button>
            
            <a href="{{ path('app_home') }}" class="visio-button visio-button-secondary">
                <i class="fas fa-arrow-left me-2"></i> Retour à l'accueil
            </a>
        </div>
        
        <div class="mt-3 text-muted small">
            <p>Si la visioconférence ne s'ouvre pas automatiquement, cliquez sur le bouton ci-dessus.</p>
            <p>Si vous rencontrez des difficultés, essayez d'autoriser les fenêtres pop-up pour ce site.</p>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Configuration Jitsi
        const clientConfig = {{ clientConfig|raw }};
        
        // URL de la visioconférence
        const domain = clientConfig.jitsiDomain || 'meet.jit.si';
        const roomName = clientConfig.roomName;
        const visioUrl = 'https://' + domain + '/' + roomName;
        
        // Éléments du DOM
        const openVisioButton = document.getElementById('openVisioButton');
        const statusMessage = document.getElementById('statusMessage');
        
        // Fonction pour ouvrir la visioconférence
        function openVisioconference() {
            // Ouvrir une nouvelle fenêtre avec la visioconférence
            const visioWindow = window.open(visioUrl, 'PitcrewVisioconference', 
                'width=1200,height=800,menubar=no,toolbar=no,location=yes,status=no');
            
            // Vérifier si la fenêtre a été bloquée
            if (!visioWindow || visioWindow.closed || typeof visioWindow.closed === 'undefined') {
                statusMessage.innerHTML = `
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        La fenêtre pop-up a été bloquée par votre navigateur. 
                        Veuillez autoriser les pop-ups pour ce site et réessayer.
                    </div>
                `;
            } else {
                statusMessage.innerHTML = `
                    <div class="alert alert-success">
                        <i class="fas fa-check-circle me-2"></i>
                        La visioconférence est maintenant ouverte dans une nouvelle fenêtre.
                    </div>
                `;
                
                // Créer un écouteur pour détecter quand la fenêtre de visio est fermée
                const checkVisioWindow = setInterval(function() {
                    if (visioWindow.closed) {
                        clearInterval(checkVisioWindow);
                        statusMessage.innerHTML = `
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle me-2"></i>
                                La visioconférence a été fermée. 
                                <a href="{{ path('app_home') }}">Retourner à la page d'accueil</a>.
                            </div>
                        `;
                    }
                }, 1000);
            }
        }
        
        // Associer l'événement au bouton
        openVisioButton.addEventListener('click', openVisioconference);
        
        // Ouvrir automatiquement la visioconférence après un court délai
        setTimeout(openVisioconference, 1500);
    });
</script>
{% endblock %} 