{% extends 'base.html.twig' %}

{% block title %}Accueil{% endblock %}

{% block body %}
   
    <!-- Posts Section -->
    <section class="py-4">
        <div class="container">
            <div class="row">
                <!-- Main Content -->
                <div class="col-lg-8 mb-4">
                    {% if app.user %}
                        <!-- Create Post Card -->
                        <div class="card shadow-sm hover-shadow-md mb-4 rounded-4 border-0">
                            <div class="card-body p-4">
                                <div class="d-flex align-items-center gap-3 mb-3">
                                    <a href="{{ path('app_profile_view', {'id': app.user.id}) }}" class="flex-shrink-0">
                                        {% if app.user.profilePicture %}
                                            <img src="{{ asset('uploads/profile_pictures/' ~ app.user.profilePicture) }}" 
                                                 class="rounded-circle border"
                                                 alt="{{ app.user.fullName }}"
                                                 style="width: 48px; height: 48px; object-fit: cover;">
                                        {% else %}
                                            <div class="bg-light rounded-circle d-flex align-items-center justify-content-center border"
                                                 style="width: 48px; height: 48px;">
                                                <i class="bi bi-person text-muted"></i>
                                            </div>
                                        {% endif %}
                                    </a>
                                    <div class="flex-grow-1 position-relative">
                                        <input type="text" id="quick-post-content" class="form-control form-control-lg text-start py-3 bg-light border-0 rounded-pill mention-input" 
                                               placeholder="Quoi de neuf, {{ app.user.firstName }} ?" style="height: auto;">
                                        <div id="mention-suggestions" class="mention-suggestions dropdown-menu"></div>
                                    </div>
                                </div>
                                
                                <div id="quick-post-form" class="d-none">
                                    <div class="mb-3">
                                        <input type="text" id="quick-post-title" class="form-control" placeholder="Titre (optionnel)">
                                    </div>
                                    <div class="mb-3">
                                        <textarea id="quick-post-full-content" class="form-control mention-input" rows="3" placeholder="Contenu de votre publication..."></textarea>
                                    </div>
                                    <div class="mb-3">
                                        <div class="input-group">
                                            <input type="file" id="quick-post-image" class="form-control" accept="image/*">
                                            <label class="input-group-text" for="quick-post-image">Image</label>
                                        </div>
                                        <small class="form-text text-muted">Formats acceptés : JPEG, PNG, GIF. Taille maximale : 5 Mo.</small>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <button type="button" id="quick-post-cancel" class="btn btn-outline-secondary">
                                            <i class="bi bi-x me-1"></i> Annuler
                                        </button>
                                        <button type="button" id="quick-post-submit" class="btn btn-primary">
                                            <i class="bi bi-send me-1"></i> Publier
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                      
                    {% else %}
                        <div class="mb-4">
                            <h2 class="display-6 fw-bold mb-3">Dernières publications</h2>
                            <p class="text-muted lead">Découvrez les actualités de notre communauté F1</p>
                        </div>
                    {% endif %}
                    
                    {% if app.user %}
                        {% if recommendedPosts is empty %}
                            <div class="alert alert-info">
                                Aucune publication recommandée n'est disponible pour le moment.
                            </div>
                        {% else %}
                            {% for post in recommendedPosts %}
                                {{ include('post/_post_card.html.twig', { post: post }) }}
                            {% endfor %}
                        {% endif %}
                    {% else %}
                        {% if recentPosts is empty %}
                            <div class="alert alert-info">
                                Aucune publication n'est disponible pour le moment.
                            </div>
                        {% else %}
                            {% for post in recentPosts %}
                                {{ include('post/_post_card.html.twig', { post: post }) }}
                            {% endfor %}
                        {% endif %}
                    {% endif %}
                </div>
                
                <!-- Sidebar -->
                <div class="col-lg-4">
                    <!-- Profile Card -->
                    {% if app.user %}
                        <div class="card shadow-sm rounded-4 border-0 mb-4">
                            <div class="card-body p-4">
                                <div class="text-center mb-4">
                                    {% if app.user.profilePicture %}
                                        <img src="{{ asset('uploads/profile_pictures/' ~ app.user.profilePicture) }}" 
                                             class="rounded-circle border mb-3"
                                             alt="{{ app.user.fullName }}"
                                             style="width: 96px; height: 96px; object-fit: cover;">
                                    {% else %}
                                        <div class="bg-light rounded-circle d-flex align-items-center justify-content-center mx-auto border mb-3"
                                             style="width: 96px; height: 96px;">
                                            <i class="bi bi-person fs-2 text-muted"></i>
                                        </div>
                                    {% endif %}
                                    <h5 class="fw-bold mb-1">{{ app.user.fullName }}</h5>
                                    <p class="text-muted mb-3">
                                        {% if app.user.isRecruiter %}
                                            {{ app.user.company }}
                                        {% else %}
                                            {{ app.user.jobTitle|default('') }}
                                        {% endif %}
                                    </p>
                                    
                                    <a href="{{ path('app_profile_view', {'id': app.user.id}) }}" class="btn btn-primary rounded-pill w-100">
                                        <i class="bi bi-person-circle me-2"></i>Voir mon profil
                                    </a>
                                </div>
                                
                                <div class="row g-2 text-center">
                                    <div class="col-4">
                                        <div class="p-3 rounded-4 bg-light">
                                            <h6 class="fw-bold mb-1">{{ user_stats.posts_count }}</h6>
                                            <small class="text-muted">Publications</small>
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div class="p-3 rounded-4 bg-light">
                                            <h6 class="fw-bold mb-1">{{ user_stats.friends_count }}</h6>
                                            <small class="text-muted">Amis</small>
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div class="p-3 rounded-4 bg-light">
                                            <h6 class="fw-bold mb-1">
                                                {% if app.user %}
                                                    {% if app.user.isRecruiter %}
                                                        {{ user_stats.job_offers_count }}
                                                    {% else %}
                                                        {{ user_stats.posts_count }}
                                                    {% endif %}
                                                {% else %}
                                                    0
                                                {% endif %}
                                            </h6>
                                            <small class="text-muted">
                                                {% if app.user %}
                                                    {% if app.user.isRecruiter %}
                                                        Offres
                                                    {% else %}
                                                        Publications
                                                    {% endif %}
                                                {% else %}
                                                    Publications
                                                {% endif %}
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endif %}
                    
                    <!-- Stats Section -->
                    <div class="card shadow-sm rounded-4 border-0 mb-4">
                        <div class="card-body p-4">
                            <h6 class="fw-bold mb-4">PitCrew en chiffres</h6>
                            <div class="row g-3">
                                <div class="col-12">
                                    <div class="bg-primary bg-opacity-10 rounded-4 p-3">
                                        <div class="d-flex align-items-center">
                                            <div class="rounded-circle bg-primary p-2 me-3">
                                                <i class="bi bi-briefcase text-white"></i>
                                            </div>
                                            <div>
                                                <h3 class="h5 fw-bold mb-0">{{ activeJobOffers|length }}+</h3>
                                                <small class="text-muted">Offres d'emploi</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="bg-primary bg-opacity-10 rounded-4 p-3">
                                        <div class="d-flex align-items-center">
                                            <div class="rounded-circle bg-primary p-2 me-3">
                                                <i class="bi bi-building text-white"></i>
                                            </div>
                                            <div>
                                                <h3 class="h5 fw-bold mb-0">{{ stats.recruiters|length }}+</h3>
                                                <small class="text-muted">Entreprises</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="bg-primary bg-opacity-10 rounded-4 p-3">
                                        <div class="d-flex align-items-center">
                                            <div class="rounded-circle bg-primary p-2 me-3">
                                                <i class="bi bi-people text-white"></i>
                                            </div>
                                            <div>
                                                <h3 class="h5 fw-bold mb-0">{{ stats.applicants|length }}+</h3>
                                                <small class="text-muted">Candidats</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Suggestions -->
                    {% if suggestedUsers is defined and suggestedUsers|length > 0 %}
                        <div class="card shadow-sm rounded-4 border-0 mb-4">
                            <div class="card-body p-4">
                                <h6 class="fw-bold mb-3">Personnes que vous pourriez connaître</h6>
                                <div id="suggested-users-container">
                                {% for user in suggestedUsers|slice(0, 5) %}
                                    <div class="d-flex align-items-center justify-content-between mb-3 suggested-user" data-user-id="{{ user.id }}">
                                            <div class="d-flex align-items-center">
                                            <a href="{{ path('app_profile_view', {'id': user.id}) }}" class="me-2">
                                                {% if user.profilePicture %}
                                                    <img src="{{ asset('uploads/profile_pictures/' ~ user.profilePicture) }}" 
                                                             class="rounded-circle border"
                                                         alt="{{ user.fullName }}"
                                                             style="width: 40px; height: 40px; object-fit: cover;">
                                                    {% else %}
                                                        <div class="bg-light rounded-circle d-flex align-items-center justify-content-center border"
                                                             style="width: 40px; height: 40px;">
                                                            <i class="bi bi-person text-muted"></i>
                                                        </div>
                                                    {% endif %}
                                                </a>
                                                <div>
                                                    <h6 class="mb-0 fw-semibold">
                                                        <a href="{{ path('app_profile_view', {'id': user.id}) }}" class="text-dark text-decoration-none">
                                                            {{ user.fullName }}
                                                        </a>
                                                    </h6>
                                                    <small class="text-muted">{{ user.jobTitle|default(user.company) }}</small>
                                                </div>
                                            </div>
                                            {% if is_granted('IS_AUTHENTICATED_FULLY') %}
                                                {% if user.isFriend is defined and user.isFriend %}
                                                    <button class="btn btn-light btn-sm rounded-pill px-3" disabled>
                                                        <i class="bi bi-person-check me-1"></i>Ami
                                                    </button>
                                                {% elseif user.hasPendingRequestFrom is defined and user.hasPendingRequestFrom %}
                                                    <button class="btn btn-light btn-sm rounded-pill px-3" disabled>
                                                        <i class="bi bi-hourglass-split me-1"></i>En attente
                                                    </button>
                                                {% else %}
                                                    <a href="{{ path('app_friendship_send', {'addresseeId': user.id}) }}" 
                                                       class="btn btn-outline-primary btn-sm rounded-pill px-3 add-friend-btn"
                                                       data-user-id="{{ user.id }}">
                                                        <i class="bi bi-person-plus me-1"></i>Ajouter
                                                    </a>
                                                {% endif %}
                                            {% endif %}
                                    </div>
                                {% endfor %}
                                </div>
                                {% if suggestedUsers|length > 5 %}
                                    <a href="{{ path('app_user_suggestions') }}" class="btn btn-light rounded-pill w-100">
                                        Voir plus
                                    </a>
                                {% endif %}
                            </div>
                        </div>
                    {% endif %}
                    
                    <!-- Trending Hashtags -->
                    <div class="card shadow-sm rounded-4 border-0 mb-4">
                        <div class="card-body p-4">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h6 class="fw-bold mb-0">Sujets tendance</h6>
                                <a href="{{ path('app_hashtags_trending') }}" class="text-decoration-none small">
                                    Voir plus
                                </a>
                            </div>
                            
                            {% if trendingHashtags is defined and trendingHashtags|length > 0 %}
                                {% for hashtag in trendingHashtags|slice(0, 5) %}
                                    <a href="{{ path('app_hashtag_show', {'name': hashtag.name}) }}" class="text-decoration-none">
                                        <div class="rounded-3 p-3 mb-2 hover-bg-light">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <div>
                                                    <div class="fw-bold text-primary">#{{ hashtag.name }}</div>
                                                    <div class="text-muted small">{{ hashtag.usageCount }} publications</div>
                                                </div>
                                                <i class="bi bi-hash fs-4 text-muted"></i>
                                            </div>
                                        </div>
                                    </a>
                                {% endfor %}
                            {% else %}
                                <div class="text-center p-3">
                                    <i class="bi bi-hash-lg text-muted fs-1 mb-2"></i>
                                    <p class="text-muted">Aucun hashtag tendance pour le moment</p>
                                </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .hover-shadow-md {
            transition: box-shadow 0.3s ease;
        }
        
        .hover-shadow-md:hover {
            box-shadow: 0 .5rem 1rem rgba(0,0,0,.1)!important;
        }
        
        .hover-primary:hover {
            color: var(--bs-primary);
            background-color: rgba(var(--bs-primary-rgb), 0.1);
        }
        
        .hover-success:hover {
            color: var(--bs-success);
            background-color: rgba(var(--bs-success-rgb), 0.1);
        }
        
        .hover-danger:hover {
            color: var(--bs-danger);
            background-color: rgba(var(--bs-danger-rgb), 0.1);
        }
        
        .btn-light {
            background-color: var(--bs-light);
            border-color: var(--bs-light);
        }
        
        .bg-light {
            background-color: var(--bs-light)!important;
        }
        
        /* Styles pour les réactions */
        .reaction-container {
            position: relative;
        }
        
        .reactions-box {
            position: absolute;
            bottom: 50px;
            left: 0;
            z-index: 100;
            transition: all 0.9s ease;
            transform-origin: bottom left;
            padding: 8px !important;
        }
        
        .reaction-menu {
            transition: opacity 0.9s ease, visibility 0.9s ease;
            opacity: 0;
            visibility: hidden;
        }
        
        .reaction-container:hover .reaction-menu,
        .reaction-menu:hover {
            opacity: 1;
            visibility: visible;
        }
        
        .reaction-menu:not(:hover) {
            transition-delay: 0.8s;
        }
        
        .btn-reaction {
            transition: transform 0.3s ease;
            background: transparent;
            border: none;
            padding: 10px !important;
            margin: 0 3px;
        }
        
        .btn-reaction i {
            font-size: 1.4rem !important;
        }
        
        .btn-reaction:hover {
            transform: scale(1.3);
            background: transparent;
        }
        
        .btn-reaction:focus, .btn-reaction:active {
            box-shadow: none;
            outline: none;
            background: transparent;
        }
        
        .reaction-text {
            font-size: 0.8rem;
            position: absolute;
            bottom: -20px;
            left: 50%;
            transform: translateX(-50%);
            white-space: nowrap;
            background-color: rgba(0,0,0,0.7);
            color: white;
            padding: 2px 5px;
            border-radius: 3px;
            opacity: 0;
            transition: opacity 0.2s ease;
        }
        
        .btn-reaction:hover .reaction-text {
            opacity: 1;
        }
        
        /* Style pour les hashtags tendance */
        .hover-bg-light {
            transition: background-color 0.2s ease;
        }
        
        .hover-bg-light:hover {
            background-color: var(--bs-light);
        }
        
        .mention-suggestions {
            position: absolute;
            max-height: 200px;
            overflow-y: auto;
            z-index: 1050;
            display: none;
        }
        
        .mention-suggestions.show {
            display: block;
        }
        
        .mention-item {
            display: flex;
            align-items: center;
            padding: 8px 10px;
            cursor: pointer;
            background-color: white;
        }
        
        .mention-item:hover, .mention-item.active {
            background-color: #f8f9fa;
        }
        
        .mention-item img, .mention-item .avatar-placeholder {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            margin-right: 10px;
        }
        
        .mention-item .avatar-placeholder {
            background-color: #e9ecef;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .mention {
            color: #0d6efd;
            font-weight: 500;
        }
        
        .hashtag {
            color: #0d6efd;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Gestion de la création rapide de post
            const quickPostContent = document.getElementById('quick-post-content');
            const quickPostForm = document.getElementById('quick-post-form');
            const quickPostTitle = document.getElementById('quick-post-title');
            const quickPostFullContent = document.getElementById('quick-post-full-content');
            const quickPostCancel = document.getElementById('quick-post-cancel');
            const quickPostSubmit = document.getElementById('quick-post-submit');
            const quickPostImage = document.getElementById('quick-post-image');
            
            if (quickPostContent) {
                quickPostContent.addEventListener('focus', function() {
                    quickPostForm.classList.remove('d-none');
                    quickPostFullContent.focus();
                    quickPostFullContent.value = quickPostContent.value;
                });
                
                quickPostCancel.addEventListener('click', function() {
                    quickPostForm.classList.add('d-none');
                    quickPostContent.value = '';
                    quickPostTitle.value = '';
                    quickPostFullContent.value = '';
                    quickPostImage.value = '';
                });
                
                quickPostSubmit.addEventListener('click', function() {
                    // Vérification basique des données du formulaire
                    if (!quickPostFullContent.value.trim()) {
                        alert('Le contenu du post ne peut pas être vide');
                        return;
                    }
                    
                    const formData = new FormData();
                    formData.append('title', quickPostTitle.value.trim());
                    formData.append('content', quickPostFullContent.value.trim());
                    
                    if (quickPostImage.files.length > 0) {
                        formData.append('imageFile', quickPostImage.files[0]);
                    }
                    
                    // Désactiver le bouton et montrer un indicateur de chargement
                    quickPostSubmit.disabled = true;
                    quickPostSubmit.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Publication en cours...';
                    
                    // Consigner dans la console ce qui est envoyé
                    console.log('Envoi du formulaire :', {
                        title: quickPostTitle.value.trim(),
                        content: quickPostFullContent.value.trim(),
                        hasImage: quickPostImage.files.length > 0
                    });
                    
                    fetch('/post/quick-create', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        console.log('Réponse du serveur:', data);
                        
                        if (!data.success) {
                            throw new Error(data.error || 'Erreur inconnue lors de la création du post');
                        }
                        
                        // Vérifier si l'ID du post est valide
                        if (!data.post || !data.post.id || isNaN(parseInt(data.post.id))) {
                            console.error('ID de post invalide reçu:', data.post?.id);
                            throw new Error('ID de post invalide reçu du serveur');
                        }
                        
                        // Réinitialiser le formulaire
                        quickPostForm.classList.add('d-none');
                        quickPostContent.value = '';
                        quickPostTitle.value = '';
                        quickPostFullContent.value = '';
                        quickPostImage.value = '';
                        
                        // Recharger la page pour afficher le nouveau post
                        window.location.reload();
                    })
                    .catch(error => {
                        console.error('Erreur lors de la création du post:', error);
                        // Réactiver le bouton et afficher un message d'erreur
                        quickPostSubmit.disabled = false;
                        quickPostSubmit.innerHTML = '<i class="bi bi-send me-1"></i> Publier';
                        
                        // Afficher un message d'erreur plus détaillé
                        alert('Erreur lors de la création du post: ' + error.message);
                    });
                });
            }
            
            // Fonctionnalité d'autocomplétion des mentions
            const mentionInputs = document.querySelectorAll('.mention-input');
            const mentionSuggestions = document.getElementById('mention-suggestions');
            
            if (mentionInputs.length > 0 && mentionSuggestions) {
                let currentMentionInput = null;
                let mentionPos = -1;
                let mentionText = '';
                let atPos = -1;
                let isMentioning = false;
                
                // Fonction pour détecter la position du curseur
                function getCaretPosition(element) {
                    return element.selectionStart;
                }
                
                // Fonction pour extraire le texte de la mention en cours
                function extractMentionText(text, cursorPos) {
                    const beforeCursor = text.substring(0, cursorPos);
                    const atIndex = beforeCursor.lastIndexOf('@');
                    
                    if (atIndex !== -1) {
                        const afterAt = beforeCursor.substring(atIndex + 1);
                        // Vérifier qu'il n'y a pas d'espace dans le texte après @
                        if (!/\s/.test(afterAt)) {
                            return {
                                text: afterAt,
                                startPos: atIndex
                            };
                        }
                    }
                    
                    return null;
                }
                
                // Fonction pour insérer la mention à la position du curseur
                function insertMention(username, userId, fullName) {
                    const initialText = currentMentionInput.value;
                    const cursorPos = getCaretPosition(currentMentionInput);
                    const mention = `@${username}@${fullName}`;
                    
                    currentMentionInput.value = initialText.substring(0, cursorPos) + mention + initialText.substring(cursorPos);
                }
                
                // Fonction pour mettre à jour les suggestions
                function updateSuggestions() {
                    const text = currentMentionInput.value;
                    const mentions = text.match(/@[^@]+@[^@]+/g) || [];
                    
                    mentionSuggestions.innerHTML = '';
                    
                    for (const mention of mentions) {
                        const [username, fullName] = mention.split('@');
                        const item = document.createElement('a');
                        item.href = '#';
                        item.className = 'dropdown-item mention-item';
                        item.textContent = fullName;
                        item.dataset.username = username;
                        item.dataset.fullName = fullName;
                        item.addEventListener('click', function() {
                            currentMentionInput.value = '@' + this.dataset.username + '@' + this.dataset.fullName;
                            quickPostForm.classList.add('d-none');
                        });
                        mentionSuggestions.appendChild(item);
                    }
                    
                    if (mentions.length > 0) {
                        mentionSuggestions.classList.add('show');
                    } else {
                        mentionSuggestions.classList.remove('show');
                    }
                }
                
                // Initialisation
                for (const mentionInput of mentionInputs) {
                    mentionInput.addEventListener('input', function() {
                        currentMentionInput = this;
                        updateSuggestions();
                    });
                }
            }

            const container = document.getElementById('suggested-users-container');
            if (!container) return;

            container.addEventListener('click', async function(e) {
                const addButton = e.target.closest('.add-friend-btn');
                if (!addButton) return;

                e.preventDefault();
                const userId = addButton.dataset.userId;
                const userCard = addButton.closest('.suggested-user');

                try {
                    const response = await fetch(addButton.href, {
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    });
                    const data = await response.json();

                    if (data.success) {
                        // Remplacer le bouton par "En attente"
                        addButton.outerHTML = `
                            <button class="btn btn-light btn-sm rounded-pill px-3" disabled>
                                <i class="bi bi-hourglass-split me-1"></i>En attente
                            </button>
                        `;

                        // Si un nouvel utilisateur est suggéré, l'ajouter avec une animation
                        if (data.newSuggestion) {
                            // Créer le nouvel élément
                            const newUserHtml = `
                                <div class="d-flex align-items-center justify-content-between mb-3 suggested-user" 
                                     data-user-id="${data.newSuggestion.id}" 
                                     style="opacity: 0; transform: translateY(20px);">
                                    <div class="d-flex align-items-center">
                                        <a href="${data.newSuggestion.profileUrl}" class="me-2">
                                            ${data.newSuggestion.profilePicture 
                                                ? `<img src="/uploads/profile_pictures/${data.newSuggestion.profilePicture}" 
                                                       class="rounded-circle border"
                                                       alt="${data.newSuggestion.fullName}"
                                                       style="width: 40px; height: 40px; object-fit: cover;">`
                                                : `<div class="bg-light rounded-circle d-flex align-items-center justify-content-center border"
                                                       style="width: 40px; height: 40px;">
                                                       <i class="bi bi-person text-muted"></i>
                                                   </div>`
                                            }
                                        </a>
                                        <div>
                                            <h6 class="mb-0 fw-semibold">
                                                <a href="${data.newSuggestion.profileUrl}" class="text-dark text-decoration-none">
                                                    ${data.newSuggestion.fullName}
                                                </a>
                                            </h6>
                                            <small class="text-muted">
                                                ${data.newSuggestion.jobTitle || data.newSuggestion.company || ''}
                                            </small>
                                        </div>
                                    </div>
                                    <a href="${data.newSuggestion.addFriendUrl}" 
                                       class="btn btn-outline-primary btn-sm rounded-pill px-3 add-friend-btn"
                                       data-user-id="${data.newSuggestion.id}">
                                        <i class="bi bi-person-plus me-1"></i>Ajouter
                                    </a>
                                </div>
                            `;

                            // Ajouter le nouvel élément au conteneur
                            container.insertAdjacentHTML('beforeend', newUserHtml);
                            const newUserElement = container.lastElementChild;

                            // Animer la sortie de l'ancien utilisateur
                            userCard.style.transition = 'all 0.3s ease-out';
                            userCard.style.opacity = '0';
                            userCard.style.transform = 'translateY(-20px)';

                            setTimeout(() => {
                                // Supprimer l'ancien utilisateur
                                userCard.remove();

                                // Animer l'entrée du nouvel utilisateur
                                newUserElement.style.transition = 'all 0.3s ease-out';
                                newUserElement.style.opacity = '1';
                                newUserElement.style.transform = 'translateY(0)';
                            }, 300);
                        }
                    } else {
                        // Afficher le message d'erreur
                        alert(data.message);
                    }
                } catch (error) {
                    console.error('Erreur lors de l\'ajout de l\'ami:', error);
                    alert('Une erreur est survenue lors de l\'ajout de l\'ami.');
                }
            });
        });
    </script>
{% endblock %}
