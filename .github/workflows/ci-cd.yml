name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: blog
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          
    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, json, mbstring
        
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        
    - name: Install Dependencies
      run: |
        composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        npm install
        
    - name: Build Assets
      run: npm run build
        
    - name: Create test database
      run: |
        php bin/console --env=test doctrine:database:create --if-not-exists
        php bin/console --env=test doctrine:schema:create
      env:
        DATABASE_URL: "mysql://root:root@127.0.0.1:3306/blog_test?serverVersion=8.0"
        
    - name: Execute tests
      env:
        DATABASE_URL: "mysql://root:root@127.0.0.1:3306/blog_test?serverVersion=8.0"
      run: ./vendor/bin/phpunit --coverage-clover coverage.xml

  deploy:
    name: Deploy to Production
    needs: symfony-tests
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          
      - name: Install Production Dependencies
        run: |
          APP_ENV=prod composer install --no-dev --optimize-autoloader --no-interaction --no-progress --no-scripts
          APP_ENV=prod composer dump-env prod
        
      - name: Build assets
        run: |
          npm install
          npm run build
          
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}
          
      - name: Deploy to production
        uses: deployphp/action@v1
        with:
          deployer-version: "7.3.1"
          deployment: production
          dep: deploy 