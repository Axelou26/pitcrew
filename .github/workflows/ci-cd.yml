name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-quality:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: blog_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, json
          coverage: xdebug
          
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
          
      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress
        
      - name: Code Quality Checks
        run: |
          vendor/bin/phpcs --standard=PSR12 src/
          vendor/bin/phpmd src/ text .github/phpmd.xml
          
      - name: Security Check
        uses: symfonycorp/security-checker-action@v4
        
      - name: Setup Test Database
        run: |
          php bin/console --env=test doctrine:database:create --if-not-exists
          php bin/console --env=test doctrine:schema:update --force
        env:
          DATABASE_URL: "mysql://root:root@127.0.0.1:3306/blog_test?serverVersion=8.0"
          
      - name: Run Tests with Coverage
        run: php bin/phpunit --coverage-clover clover.xml
        
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: clover.xml
          retention-days: 7

  deploy:
    needs: test-and-quality
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://127.0.0.1:8000/
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install & Build
        run: |
          composer install --no-dev --optimize-autoloader
          npm ci
          npm run build
          
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            cd /var/www/pitcrew
            git pull origin main
            composer install --no-dev --optimize-autoloader
            php bin/console cache:clear --env=prod
            php bin/console doctrine:migrations:migrate --no-interaction --env=prod
            npm ci && npm run build
            php bin/console cache:warmup --env=prod
            sudo systemctl reload php8.2-fpm
            
      - name: Smoke Tests
        run: |
          curl --fail ${{ secrets.PRODUCTION_URL }}/health
          curl --fail ${{ secrets.PRODUCTION_URL }}/api/health
          
      - name: Notify Slack
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: ${{ job.status == 'success' && 'üöÄ D√©ploiement r√©ussi sur la production' || '‚ùå √âchec du d√©ploiement en production' }}
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_FOOTER: "Commit: ${{ github.sha }}" 