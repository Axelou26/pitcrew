parameters:
    cv_directory: '%kernel.project_dir%/public/uploads/cv'
    posts_directory: '%kernel.project_dir%/public/uploads/posts'
    post_images_directory: '%kernel.project_dir%/public/uploads/posts'
    resumes_directory: '%kernel.project_dir%/public/uploads/resumes'
    documents_directory: '%kernel.project_dir%/public/uploads/documents'
    profile_pictures_directory: '%kernel.project_dir%/public/uploads/profile_pictures'
    cover_letters_directory: '%kernel.project_dir%/public/uploads/cover_letters'
    stripe_public_key: '%env(STRIPE_PUBLIC_KEY)%'
    stripe_secret_key: '%env(STRIPE_SECRET_KEY)%'
    stripe_webhook_secret: '%env(STRIPE_WEBHOOK_SECRET)%'
    stripe_offline_mode: '%env(bool:STRIPE_OFFLINE_MODE)%'
    logos_directory: '%kernel.project_dir%/public/uploads/logos'
    job_images_directory: '%kernel.project_dir%/public/uploads/job_images'

services:
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            $kernelEnvironment: '%kernel.environment%'
            $stripeSecretKey: '%stripe_secret_key%'

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    
    # Le service FileUploader n'a plus besoin de configuration sp√©ciale car il utilise ParameterBagInterface 

    App\Service\MetricsCollector:
        arguments:
            $logger: '@logger'

    App\Repository\PostRepository:
        arguments:
            $cache: '@cache.app'

    # Rendre le service de recommandation public pour les tests
    App\Service\RecommendationService:
        public: true 

    App\Service\EmailValidationService:
        arguments:
            $env: '%kernel.environment%'

    App\Validator\EmailValidator:
        tags:
            - { name: validator.constraint_validator } 

    twig.extension.string:
        class: Twig\Extra\String\StringExtension
        tags: ['twig.extension'] 